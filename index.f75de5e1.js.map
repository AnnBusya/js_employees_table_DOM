{"mappings":"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","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst thead = table.querySelector('thead');\nconst tbody = table.querySelector('tbody');\n\nlet sortDirection = true;\nlet currentColumn = null;\nlet rows = Array.from(tbody.querySelectorAll('tr'));\nconst form = document.createElement('form');\nconst dataAttributes = ['name', 'position', 'office', 'age', 'salary'];\nconst button = document.createElement('button');\n\nbutton.type = 'submit';\nbutton.textContent = 'Save to table';\n\nfunction capitalizeFirstLetter(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nform.classList.add('new-employee-form');\n\nconst sortTableByColumn = (index) => {\n  const isNumberColumn = ['Age', 'Salary'].includes(\n    thead.rows[0].cells[index].textContent,\n  );\n\n  const sortedRows = rows.slice(0);\n\n  sortedRows.sort((rowA, rowB) => {\n    let cellA = rowA.cells[index].textContent;\n    let cellB = rowB.cells[index].textContent;\n\n    if (isNumberColumn) {\n      cellA = parseFloat(cellA.replace(/[^0-9.-]+/g, ''));\n      cellB = parseFloat(cellB.replace(/[^0-9.-]+/g, ''));\n    }\n\n    return (sortDirection ? 1 : -1) * (cellA > cellB ? 1 : -1);\n  });\n\n  tbody.innerHTML = '';\n  sortedRows.forEach((row) => tbody.appendChild(row));\n  rows = sortedRows;\n};\n\nthead.addEventListener('click', (e) => {\n  const target = e.target;\n\n  if (target.tagName !== 'TH') {\n    return;\n  }\n\n  const columnIndex = Array.from(target.parentNode.children).indexOf(target);\n\n  if (currentColumn === columnIndex) {\n    sortDirection = !sortDirection;\n  } else {\n    sortDirection = true;\n  }\n\n  currentColumn = columnIndex;\n  sortTableByColumn(columnIndex);\n});\n\ntbody.addEventListener('click', (e) => {\n  const target = e.target;\n\n  if (target.tagName !== 'TD') {\n    return;\n  }\n\n  const clickedRow = target.parentNode;\n\n  tbody.querySelectorAll('tr').forEach((row) => row.classList.remove('active'));\n  clickedRow.classList.add('active');\n});\n\nconst handleAddInputs = () => {\n  dataAttributes.forEach((attribute) => {\n    const label = document.createElement('label');\n    const input = document.createElement('input');\n\n    switch (attribute) {\n      case 'name':\n      case 'position':\n        input.type = 'text';\n        input.name = attribute;\n        input.dataset.qa = attribute;\n\n        input.addEventListener('input', () => {\n          input.value = capitalizeFirstLetter(input.value);\n        });\n\n        label.textContent = capitalizeFirstLetter(attribute);\n        label.appendChild(input);\n        form.appendChild(label);\n        break;\n\n      case 'office':\n        const select = document.createElement('select');\n        const cities = [\n          'Tokyo',\n          'Singapore',\n          'London',\n          'New York',\n          'Edinburgh',\n          'San Francisco',\n        ];\n\n        select.name = attribute;\n        select.required = true;\n        select.dataset.qa = attribute;\n\n        cities.forEach((city) => {\n          const option = document.createElement('option');\n\n          option.value = city;\n          option.textContent = city;\n          select.appendChild(option);\n        });\n\n        label.textContent = capitalizeFirstLetter(attribute);\n        label.appendChild(select);\n        form.appendChild(label);\n        break;\n\n      case 'age':\n      case 'salary':\n        input.type = 'number';\n        input.name = attribute;\n        input.dataset.qa = attribute;\n\n        label.textContent = capitalizeFirstLetter(attribute);\n        label.appendChild(input);\n        form.appendChild(label);\n        break;\n    }\n  });\n};\n\nconst showNotification = (message, isSuccess) => {\n  const notification = document.createElement('div');\n\n  notification.className = `notification ${isSuccess ? 'success' : 'error'}`;\n  notification.setAttribute('data-qa', 'notification');\n  notification.textContent = message;\n  document.body.appendChild(notification);\n  setTimeout(() => notification.remove(), 3000);\n};\n\nconst handleAddEmployee = (action) => {\n  action.preventDefault();\n\n  const fullName = form.querySelector('input[name=\"name\"]');\n  const positionInput = form.querySelector('input[name=\"position\"]');\n  const officeSelect = form.querySelector('select[name=\"office\"]');\n  const ageInput = form.querySelector('input[name=\"age\"]');\n  const salaryInput = form.querySelector('input[name=\"salary\"]');\n\n  const employeeName = fullName.value.trim();\n  const position = positionInput.value.trim();\n  const office = officeSelect.value;\n  const age = parseInt(ageInput.value, 10);\n  const salary = parseFloat(salaryInput.value);\n\n  const warnings = [];\n\n  if (employeeName.length < 4) {\n    warnings.push('Name must be at least 4 characters long.');\n  }\n\n  if (positionInput.value.trim() !== positionInput.value) {\n    warnings.push('Position field should not contain only spaces.');\n  }\n\n  if (positionInput.value.trim() === '') {\n    warnings.push('Position field cannot be empty.');\n  }\n\n  if (age < 18 || age > 90) {\n    warnings.push('Age must be between 18 and 90.');\n  }\n\n  if (isNaN(salary) || salary <= 0) {\n    warnings.push('Salary must be a positive number.');\n  }\n\n  if (warnings.length > 0) {\n    return showNotification(warnings.join('\\n'), false);\n  }\n\n  const newRow = document.createElement('tr');\n  const newName = document.createElement('td');\n  const newPosition = document.createElement('td');\n  const newOffice = document.createElement('td');\n  const newAge = document.createElement('td');\n  const newSalary = document.createElement('td');\n\n  newName.textContent = employeeName;\n  newPosition.textContent = position;\n  newOffice.textContent = office;\n  newAge.textContent = age;\n  newSalary.textContent = `$${salary.toLocaleString('en-US')}`;\n\n  newRow.append(newName, newPosition, newOffice, newAge, newSalary);\n  tbody.appendChild(newRow);\n\n  rows.push(newRow);\n\n  form.reset();\n  showNotification('Employee added successfully!', true);\n};\n\ntbody.addEventListener('dblclick', (dblClickEvent) => {\n  const target = dblClickEvent.target;\n\n  if (target.tagName !== 'TD') {\n    return;\n  }\n\n  const originalText = target.textContent;\n  const input = document.createElement('input');\n\n  input.type = 'text';\n  input.className = 'cell-input';\n  input.value = originalText;\n  target.textContent = '';\n  target.appendChild(input);\n  input.focus();\n\n  input.addEventListener('blur', () => {\n    target.textContent = input.value || originalText;\n    input.remove();\n  });\n\n  input.addEventListener('keydown', (keyEvent) => {\n    if (keyEvent.key === 'Enter') {\n      target.textContent = input.value || originalText;\n      input.remove();\n    }\n  });\n});\n\nhandleAddInputs();\nform.appendChild(button);\ndocument.body.appendChild(form);\n\nbutton.addEventListener('click', handleAddEmployee);\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}